(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "tslib", "parameter", "./error"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require("tslib");
    var parameter_1 = tslib_1.__importDefault(require("parameter"));
    var error_1 = require("./error");
    var Validator = (function () {
        function Validator(options) {
            this.p = new parameter_1.default(options);
        }
        Validator.prototype.validate = function (rules, obj) {
            if (typeof obj !== 'object' && typeof rules === 'string') {
                obj = { field: obj };
                rules = { field: rules };
            }
            var message = this.p.validate(rules, obj);
            if (!message) {
                return null;
            }
            var result = message.map(function (mistake) {
                if (mistake.field) {
                    var target = JSON.parse(JSON.stringify(obj));
                    var fields = mistake.field.match(/[^\.\[\]]+/g);
                    while (fields.length) {
                        var field = fields.shift();
                        if (!target.hasOwnProperty(field)) {
                            break;
                        }
                        target = target[field];
                    }
                    mistake.value = target;
                }
                return mistake;
            });
            function getMessage(result) {
                if (Array.isArray(result)) {
                    return result.map(getMessage).join('; ');
                }
                return result.field + " " + result.message;
            }
            throw new error_1.bizError.ValidationError(getMessage(result));
        };
        return Validator;
    }());
    exports.Validator = Validator;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsaWRhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3ZhbGlkYXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFBQSxnRUFBa0M7SUFDbEMsaUNBQW1DO0lBR25DO1FBRUUsbUJBQVksT0FBNEI7WUFDdEMsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLG1CQUFTLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDbEMsQ0FBQztRQVFNLDRCQUFRLEdBQWYsVUFBZ0IsS0FBVSxFQUFFLEdBQVE7WUFFbEMsSUFBSSxPQUFPLEdBQUcsS0FBSyxRQUFRLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxFQUFFO2dCQUN4RCxHQUFHLEdBQUcsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLENBQUM7Z0JBQ3JCLEtBQUssR0FBRyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQzthQUMxQjtZQUVELElBQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQztZQUM1QyxJQUFJLENBQUMsT0FBTyxFQUFFO2dCQUNaLE9BQU8sSUFBSSxDQUFDO2FBQ2I7WUFHRCxJQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQUEsT0FBTztnQkFDaEMsSUFBSSxPQUFPLENBQUMsS0FBSyxFQUFFO29CQUNqQixJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztvQkFDN0MsSUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7b0JBRWxELE9BQU8sTUFBTSxDQUFDLE1BQU0sRUFBRTt3QkFDcEIsSUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDO3dCQUM3QixJQUFJLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsRUFBRTs0QkFDakMsTUFBTTt5QkFDUDt3QkFFRCxNQUFNLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO3FCQUN4QjtvQkFFRCxPQUFPLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQztpQkFDeEI7Z0JBRUQsT0FBTyxPQUFPLENBQUM7WUFDakIsQ0FBQyxDQUFDLENBQUM7WUFFSCxTQUFTLFVBQVUsQ0FBQyxNQUFNO2dCQUN4QixJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUU7b0JBQ3pCLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7aUJBQzFDO2dCQUVELE9BQVUsTUFBTSxDQUFDLEtBQUssU0FBSSxNQUFNLENBQUMsT0FBUyxDQUFDO1lBQzdDLENBQUM7WUFFRCxNQUFNLElBQUksZ0JBQVEsQ0FBQyxlQUFlLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDekQsQ0FBQztRQUNILGdCQUFDO0lBQUQsQ0FBQyxBQXZERCxJQXVEQztJQXZEWSw4QkFBUyJ9