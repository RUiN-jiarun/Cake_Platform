(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "tslib", "../codec", "../constant"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require("tslib");
    var codec_1 = require("../codec");
    var constant_1 = require("../constant");
    var BaseCommand = (function () {
        function BaseCommand(argMap) {
            this._schema = {};
            this._argMap = {};
            this._argMap = argMap;
            if (!this._argMap.options) {
                this._argMap.options = {};
            }
        }
        Object.defineProperty(BaseCommand.prototype, "permission", {
            get: function () {
                switch (this._permission) {
                    case constant_1.PERMISSION.CREATE:
                    case constant_1.PERMISSION.UPDATE:
                    case constant_1.PERMISSION.DELETE:
                        return constant_1.PERMISSION.WRITE;
                    default:
                        return this._permission;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseCommand.prototype, "argMap", {
            get: function () {
                return this._argMap;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseCommand.prototype, "schema", {
            get: function () {
                return this._schema;
            },
            enumerable: true,
            configurable: true
        });
        BaseCommand.prototype.augmentOptions = function (options) {
            this.argMap.options = Object.assign({}, this.argMap.options, options);
        };
        BaseCommand.prototype.inspect = function () {
            var args = clean(JSON.parse(JSON.stringify(this.argMap)));
            function clean(d) {
                for (var _i = 0, _a = Object.keys(d); _i < _a.length; _i++) {
                    var k = _a[_i];
                    if (codec_1.isObject(d[k])) {
                        if (Object.keys(d[k]).length === 0) {
                            delete d[k];
                        }
                        else {
                            clean(d[k]);
                        }
                    }
                    if (d[k] === undefined) {
                        delete d[k];
                    }
                }
                return d;
            }
            return tslib_1.__assign(tslib_1.__assign({}, args), { command: this.name });
        };
        return BaseCommand;
    }());
    exports.BaseCommand = BaseCommand;
    var AggregateCommand = (function (_super) {
        tslib_1.__extends(AggregateCommand, _super);
        function AggregateCommand() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.name = 'aggregate';
            _this._schema = {
                pipeline: 'array',
                options: {
                    type: 'object',
                    required: false,
                },
            };
            _this._permission = constant_1.PERMISSION.AGGREGATE;
            return _this;
        }
        return AggregateCommand;
    }(BaseCommand));
    exports.AggregateCommand = AggregateCommand;
    var CountCommand = (function (_super) {
        tslib_1.__extends(CountCommand, _super);
        function CountCommand() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.name = 'count';
            _this._schema = {
                query: 'object',
                options: {
                    type: 'object',
                    required: false,
                },
            };
            _this._permission = constant_1.PERMISSION.READ;
            return _this;
        }
        return CountCommand;
    }(BaseCommand));
    exports.CountCommand = CountCommand;
    var DistinctCommand = (function (_super) {
        tslib_1.__extends(DistinctCommand, _super);
        function DistinctCommand() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.name = 'distinct';
            _this._schema = {
                key: 'string',
                query: 'object',
                options: {
                    type: 'object',
                    required: false,
                },
            };
            _this._permission = constant_1.PERMISSION.READ;
            return _this;
        }
        return DistinctCommand;
    }(BaseCommand));
    exports.DistinctCommand = DistinctCommand;
    var FindDocumentCommand = (function (_super) {
        tslib_1.__extends(FindDocumentCommand, _super);
        function FindDocumentCommand() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.name = 'findOne';
            _this._schema = {
                query: 'object',
                options: {
                    type: 'object',
                    required: false,
                },
            };
            _this._permission = constant_1.PERMISSION.READ;
            return _this;
        }
        return FindDocumentCommand;
    }(BaseCommand));
    exports.FindDocumentCommand = FindDocumentCommand;
    var FindDocumentsCommand = (function (_super) {
        tslib_1.__extends(FindDocumentsCommand, _super);
        function FindDocumentsCommand() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.name = 'find';
            _this._schema = {
                query: {
                    type: 'object',
                    required: false,
                },
                options: {
                    type: 'object',
                    required: false,
                },
            };
            _this._permission = constant_1.PERMISSION.READ;
            return _this;
        }
        return FindDocumentsCommand;
    }(BaseCommand));
    exports.FindDocumentsCommand = FindDocumentsCommand;
    var InsertDocumentCommand = (function (_super) {
        tslib_1.__extends(InsertDocumentCommand, _super);
        function InsertDocumentCommand() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.name = 'insertOne';
            _this._schema = {
                doc: 'field',
                options: {
                    type: 'object',
                    required: false,
                },
            };
            _this._permission = constant_1.PERMISSION.CREATE;
            return _this;
        }
        return InsertDocumentCommand;
    }(BaseCommand));
    exports.InsertDocumentCommand = InsertDocumentCommand;
    var InsertDocumentsCommand = (function (_super) {
        tslib_1.__extends(InsertDocumentsCommand, _super);
        function InsertDocumentsCommand() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.name = 'insertMany';
            _this._schema = {
                docs: 'fields',
                options: {
                    type: 'object',
                    required: false,
                },
            };
            _this._permission = constant_1.PERMISSION.CREATE;
            return _this;
        }
        return InsertDocumentsCommand;
    }(BaseCommand));
    exports.InsertDocumentsCommand = InsertDocumentsCommand;
    var FindAndUpdateDocumentCommand = (function (_super) {
        tslib_1.__extends(FindAndUpdateDocumentCommand, _super);
        function FindAndUpdateDocumentCommand() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.name = 'findOneAndUpdate';
            _this._schema = {
                filter: 'object',
                update: 'object',
                options: {
                    type: 'object',
                    required: false,
                },
            };
            _this._permission = constant_1.PERMISSION.UPDATE;
            return _this;
        }
        return FindAndUpdateDocumentCommand;
    }(BaseCommand));
    exports.FindAndUpdateDocumentCommand = FindAndUpdateDocumentCommand;
    var UpdateDocumentCommand = (function (_super) {
        tslib_1.__extends(UpdateDocumentCommand, _super);
        function UpdateDocumentCommand() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.name = 'updateOne';
            _this._schema = {
                filter: 'object',
                update: 'object',
                options: {
                    type: 'object',
                    required: false,
                },
            };
            _this._permission = constant_1.PERMISSION.UPDATE;
            return _this;
        }
        return UpdateDocumentCommand;
    }(BaseCommand));
    exports.UpdateDocumentCommand = UpdateDocumentCommand;
    var UpdateDocumentsCommand = (function (_super) {
        tslib_1.__extends(UpdateDocumentsCommand, _super);
        function UpdateDocumentsCommand() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.name = 'updateMany';
            _this._schema = {
                filter: 'object',
                update: 'object',
                options: {
                    type: 'object',
                    required: false,
                },
            };
            _this._permission = constant_1.PERMISSION.UPDATE;
            return _this;
        }
        return UpdateDocumentsCommand;
    }(BaseCommand));
    exports.UpdateDocumentsCommand = UpdateDocumentsCommand;
    var FindAndReplaceDocumentCommand = (function (_super) {
        tslib_1.__extends(FindAndReplaceDocumentCommand, _super);
        function FindAndReplaceDocumentCommand() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.name = 'findOneAndReplace';
            _this._schema = {
                filter: 'object',
                replacement: 'object',
                options: {
                    type: 'object',
                    required: false,
                },
            };
            _this._permission = constant_1.PERMISSION.UPDATE;
            return _this;
        }
        return FindAndReplaceDocumentCommand;
    }(BaseCommand));
    exports.FindAndReplaceDocumentCommand = FindAndReplaceDocumentCommand;
    var ReplaceDocumentCommand = (function (_super) {
        tslib_1.__extends(ReplaceDocumentCommand, _super);
        function ReplaceDocumentCommand() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.name = 'replaceOne';
            _this._schema = {
                filter: 'object',
                doc: 'object',
                options: {
                    type: 'object',
                    required: false,
                },
            };
            _this._permission = constant_1.PERMISSION.UPDATE;
            return _this;
        }
        return ReplaceDocumentCommand;
    }(BaseCommand));
    exports.ReplaceDocumentCommand = ReplaceDocumentCommand;
    var FindAndDeleteDocumentCommand = (function (_super) {
        tslib_1.__extends(FindAndDeleteDocumentCommand, _super);
        function FindAndDeleteDocumentCommand() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.name = 'findOneAndDelete';
            _this._schema = {
                filter: 'object',
                options: {
                    type: 'object',
                    required: false,
                },
            };
            _this._permission = constant_1.PERMISSION.DELETE;
            return _this;
        }
        return FindAndDeleteDocumentCommand;
    }(BaseCommand));
    exports.FindAndDeleteDocumentCommand = FindAndDeleteDocumentCommand;
    var DeleteDocumentCommand = (function (_super) {
        tslib_1.__extends(DeleteDocumentCommand, _super);
        function DeleteDocumentCommand() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.name = 'deleteOne';
            _this._schema = {
                filter: 'object',
                options: {
                    type: 'object',
                    required: false,
                },
            };
            _this._permission = constant_1.PERMISSION.DELETE;
            return _this;
        }
        return DeleteDocumentCommand;
    }(BaseCommand));
    exports.DeleteDocumentCommand = DeleteDocumentCommand;
    var DeleteDocumentsCommand = (function (_super) {
        tslib_1.__extends(DeleteDocumentsCommand, _super);
        function DeleteDocumentsCommand() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.name = 'deleteMany';
            _this._schema = {
                filter: {
                    type: 'object',
                    required: false,
                },
                options: {
                    type: 'object',
                    required: false,
                },
            };
            _this._permission = constant_1.PERMISSION.DELETE;
            return _this;
        }
        return DeleteDocumentsCommand;
    }(BaseCommand));
    exports.DeleteDocumentsCommand = DeleteDocumentsCommand;
});
//# sourceMappingURL=data:application/json;base64,