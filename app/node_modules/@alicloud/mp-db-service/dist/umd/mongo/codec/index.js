"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mpserverless_core_1 = require("@alicloud/mpserverless-core");
const REGEXP_FLAGS = ['i', 'm', 'u', 'g'];
function _isByProto(val, type) {
    return Object.prototype.toString.call(val) === `[object ${type}]`;
}
exports._isByProto = _isByProto;
function isArray(val) {
    return Array.isArray(val);
}
exports.isArray = isArray;
function isObject(val) {
    return val !== null && typeof val === 'object' && !isArray(val);
}
exports.isObject = isObject;
function isString(val) {
    return typeof val === 'string' || _isByProto(val, 'String');
}
exports.isString = isString;
class JSONEncoder extends mpserverless_core_1.BaseEncoder {
    encode(data) {
        if (data instanceof RegExp) {
            return this.toRegexp(data);
        }
        if (data instanceof Date) {
            return this.toDate(data);
        }
        if (isArray(data)) {
            return data.map(d => this.encode(d));
        }
        if (isObject(data)) {
            return Object.keys(data).reduce((accu, k) => {
                accu[k] = this.encode(data[k]);
                return accu;
            }, {});
        }
        return data;
    }
    toDate(val) {
        return val.toISOString();
    }
    toRegexp(val) {
        return `/${val.source.replace(/\\\//g, '/')}/${val.flags}`;
    }
}
exports.JSONEncoder = JSONEncoder;
class JSONDecoder extends mpserverless_core_1.BaseDecoder {
    decode(data) {
        if (this.isRegexp(data)) {
            return this.toRegexp(data);
        }
        if (this.isDate(data)) {
            return this.toDate(data);
        }
        if (isArray(data)) {
            return data.map(d => this.decode(d));
        }
        if (isObject(data)) {
            return Object.keys(data).reduce((accu, k) => {
                accu[k] = this.decode(data[k]);
                return accu;
            }, {});
        }
        return data;
    }
    isDate(val) {
        return isString(val) && /^\d{4}\-\d{2}\-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z$/.test(val) && !isNaN(Date.parse(val));
    }
    isRegexp(val) {
        if (isString(val)) {
            let areFlagsValid = true;
            const parts = val.split('/');
            const last = parts[parts.length - 1];
            if (last) {
                areFlagsValid = last.split('').reduce((expr, p) => {
                    return expr === true && REGEXP_FLAGS.indexOf(p) > -1;
                }, true);
            }
            return parts.length >= 2 && areFlagsValid;
        }
        return false;
    }
    toDate(val) {
        return new Date(val);
    }
    toRegexp(val) {
        const firstIndex = val.indexOf('/');
        const lastIndex = val.lastIndexOf('/');
        return new RegExp(val.slice(firstIndex + 1, lastIndex), val.slice(lastIndex + 1));
    }
}
exports.JSONDecoder = JSONDecoder;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbW9uZ28vY29kZWMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtRUFBcUc7QUFNckcsTUFBTSxZQUFZLEdBQUcsQ0FBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUUsQ0FBQztBQVE1QyxTQUFnQixVQUFVLENBQUMsR0FBRyxFQUFFLElBQUk7SUFDbEMsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssV0FBVyxJQUFJLEdBQUcsQ0FBQztBQUNwRSxDQUFDO0FBRkQsZ0NBRUM7QUFPRCxTQUFnQixPQUFPLENBQUMsR0FBRztJQUN6QixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDNUIsQ0FBQztBQUZELDBCQUVDO0FBT0QsU0FBZ0IsUUFBUSxDQUFDLEdBQUc7SUFDMUIsT0FBTyxHQUFHLEtBQUssSUFBSSxJQUFJLE9BQU8sR0FBRyxLQUFLLFFBQVEsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNsRSxDQUFDO0FBRkQsNEJBRUM7QUFPRCxTQUFnQixRQUFRLENBQUMsR0FBRztJQUMxQixPQUFPLE9BQU8sR0FBRyxLQUFLLFFBQVEsSUFBSSxVQUFVLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBQzlELENBQUM7QUFGRCw0QkFFQztBQUVELE1BQWEsV0FBWSxTQUFRLCtCQUFXO0lBTW5DLE1BQU0sQ0FBQyxJQUFTO1FBQ3JCLElBQUksSUFBSSxZQUFZLE1BQU0sRUFBRTtZQUMxQixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUF5QixDQUFDO1NBQ3BEO1FBQ0QsSUFBSSxJQUFJLFlBQVksSUFBSSxFQUFFO1lBQ3hCLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQXlCLENBQUM7U0FDbEQ7UUFDRCxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNqQixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDdEM7UUFDRCxJQUFJLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNsQixPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUMxQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDL0IsT0FBTyxJQUFJLENBQUM7WUFDZCxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7U0FDUjtRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQU1TLE1BQU0sQ0FBQyxHQUFHO1FBQ2xCLE9BQU8sR0FBRyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFNUyxRQUFRLENBQUMsR0FBRztRQUNwQixPQUFPLElBQUksR0FBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUM3RCxDQUFDO0NBQ0Y7QUF6Q0Qsa0NBeUNDO0FBRUQsTUFBYSxXQUFZLFNBQVEsK0JBQVc7SUFNbkMsTUFBTSxDQUFDLElBQVM7UUFDckIsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ3ZCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUM1QjtRQUNELElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNyQixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDMUI7UUFDRCxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNqQixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDdEM7UUFDRCxJQUFJLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNsQixPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUMxQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDL0IsT0FBTyxJQUFJLENBQUM7WUFDZCxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7U0FDUjtRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQU9TLE1BQU0sQ0FBQyxHQUFHO1FBQ2xCLE9BQU8sUUFBUSxDQUFDLEdBQUcsQ0FBQyxJQUFJLGlEQUFpRCxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDakgsQ0FBQztJQU9TLFFBQVEsQ0FBQyxHQUFHO1FBQ3BCLElBQUksUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ2pCLElBQUksYUFBYSxHQUFHLElBQUksQ0FBQztZQUN6QixNQUFNLEtBQUssR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzdCLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBRXJDLElBQUksSUFBSSxFQUFFO2dCQUNSLGFBQWEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRTtvQkFDaEQsT0FBTyxJQUFJLEtBQUssSUFBSSxJQUFJLFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQ3ZELENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQzthQUNWO1lBRUQsT0FBTyxLQUFLLENBQUMsTUFBTSxJQUFJLENBQUMsSUFBSSxhQUFhLENBQUM7U0FDM0M7UUFFRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFPUyxNQUFNLENBQUMsR0FBRztRQUNsQixPQUFPLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7SUFPUyxRQUFRLENBQUMsR0FBRztRQUNwQixNQUFNLFVBQVUsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3BDLE1BQU0sU0FBUyxHQUFHLEdBQUcsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFdkMsT0FBTyxJQUFJLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLFVBQVUsR0FBRyxDQUFDLEVBQUUsU0FBUyxDQUFDLEVBQUUsR0FBRyxDQUFDLEtBQUssQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNwRixDQUFDO0NBQ0Y7QUE5RUQsa0NBOEVDIn0=